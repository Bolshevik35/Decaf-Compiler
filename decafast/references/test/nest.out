Program(ExternFunction(print_string,VoidType,VarDef(StringType)),ExternFunction(print_int,VoidType,VarDef(IntType)),Package(nest,None,Method(main,IntType,None,MethodBlock(VarDef(i,IntType),VarDef(j,IntType),VarDef(k,IntType),VarDef(l,IntType),VarDef(times,IntType),MethodCall(print_string,StringConstant("hello\n")),AssignVar(times,NumberExpr(0)),ForStmt(AssignVar(i,NumberExpr(0)),BinaryExpr(Lt,VariableExpr(i),NumberExpr(10)),AssignVar(i,BinaryExpr(Plus,VariableExpr(i),NumberExpr(1))),Block(None,IfStmt(BinaryExpr(Eq,VariableExpr(i),NumberExpr(5)),Block(None,ContinueStmt),None),ForStmt(AssignVar(j,NumberExpr(0)),BinaryExpr(Lt,VariableExpr(j),NumberExpr(10)),AssignVar(j,BinaryExpr(Plus,VariableExpr(j),NumberExpr(1))),Block(None,IfStmt(BinaryExpr(And,BinaryExpr(Eq,VariableExpr(i),NumberExpr(2)),BinaryExpr(Eq,VariableExpr(j),NumberExpr(4))),Block(None,ContinueStmt),None),ForStmt(AssignVar(k,NumberExpr(0)),BinaryExpr(Lt,VariableExpr(k),NumberExpr(10)),AssignVar(k,BinaryExpr(Plus,VariableExpr(k),NumberExpr(1))),Block(None,IfStmt(BinaryExpr(And,BinaryExpr(And,BinaryExpr(Eq,VariableExpr(i),NumberExpr(8)),BinaryExpr(Eq,VariableExpr(j),NumberExpr(1))),BinaryExpr(Eq,VariableExpr(k),NumberExpr(3))),Block(None,ContinueStmt),None),ForStmt(AssignVar(l,NumberExpr(0)),BinaryExpr(Lt,VariableExpr(l),NumberExpr(10)),AssignVar(l,BinaryExpr(Plus,VariableExpr(l),NumberExpr(1))),Block(None,IfStmt(BinaryExpr(And,BinaryExpr(And,BinaryExpr(And,BinaryExpr(Eq,VariableExpr(i),NumberExpr(1)),BinaryExpr(Eq,VariableExpr(j),NumberExpr(7))),BinaryExpr(Eq,VariableExpr(k),NumberExpr(4))),BinaryExpr(Eq,VariableExpr(l),NumberExpr(1))),Block(None,ContinueStmt),None),AssignVar(times,BinaryExpr(Plus,VariableExpr(times),NumberExpr(1))),IfStmt(BinaryExpr(And,BinaryExpr(And,BinaryExpr(And,BinaryExpr(Eq,VariableExpr(i),NumberExpr(3)),BinaryExpr(Eq,VariableExpr(j),NumberExpr(2))),BinaryExpr(Eq,VariableExpr(k),NumberExpr(6))),BinaryExpr(Eq,VariableExpr(l),NumberExpr(4))),Block(None,BreakStmt),None))),IfStmt(BinaryExpr(And,BinaryExpr(And,BinaryExpr(Eq,VariableExpr(i),NumberExpr(2)),BinaryExpr(Eq,VariableExpr(j),NumberExpr(7))),BinaryExpr(Eq,VariableExpr(k),NumberExpr(2))),Block(None,BreakStmt),None))),IfStmt(BinaryExpr(And,BinaryExpr(Eq,VariableExpr(i),NumberExpr(9)),BinaryExpr(Eq,VariableExpr(j),NumberExpr(1))),Block(None,BreakStmt),None))),IfStmt(BinaryExpr(Eq,VariableExpr(i),NumberExpr(9)),Block(None,BreakStmt),None))),MethodCall(print_int,VariableExpr(times))))))
